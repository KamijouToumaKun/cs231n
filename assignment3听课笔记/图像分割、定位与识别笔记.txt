迁移学习相关的论文：net2net

图像的语义分割（segmentation）：
对于每个像素点，确认它属于天空？猫？草地？……（一些已知的分类）
不是给整张图一个分类，而是给每一个像素点一个标签！！！
这跟聚类是不一样的

可能的方法：
1、对每一个像素点，取以它为中心点的邻域，对其作图像分类
这个分类就是这个像素点的标签
其实就是用一个滑动窗口滑过整个图像
这样的复杂度很高，不是一个完美的解决方案
考虑一下，两个重叠的邻域，都导入CNN进行分类
它们有很多的计算工作是相同的
2、让3*H*W的图像经过一个或多个卷积层，维持图像大小，得到C*H*W的图像
然后直接取argmax(axis=0)，得到H*W个分类！！！
作为分类问题，loss还是用交叉熵损失
啥，连个全连接层都没有的吗？？？
问题是，H*W太大了，要维持的话，计算量还是很大
3、前半程先进行卷积 + 下采样（downsampling），将图像缩小，减小计算量
再在后半程进行上采样（upsampling），逐步恢复H*W的大小
上采样是什么呢？池化（pooling）的反义词，去池化（unpooling）
1）恢复的部分可以跟当前值相同，可以全是0，可以记录当初argmax的位置然后补0。见图。

2）转置卷积（transpose conv）/反卷积（deconv）/小（fractal）步长卷积的概念
把图像补全，而不只是补充一样的像素或者0
卷积是：原图f，跟一个filter g卷积，得到h
现在已知h和g，要倒推原来的f是推不出来的？用傅立叶变换试试？
然而并不是这个意思。参见：https://www.jianshu.com/p/f0674e48894c
即，对h补0，补得比f还大，然后用反filter做卷积，对得到的结果做裁剪得到拟合的f
反filter也是学出来的
一维的例子：a b
补0：0 0 a 0 b 0 0
反卷积核：z y x（这里为了符合原始卷积的定义，把xyz反过来了）
得到结果：ax ay az+bx by bz
它的本质本来是矩阵乘法（此处省略……）

还有实例分割的概念，但是没有展开说？？？

分类（classification）
定位（localization）是除了要辨识目标，还要用框给框出来
	倒不用给每一个像素描述所属了，还是要好一些
	不过，还是多了一个损失函数：框的左上角和右下角的坐标的预测误差
multi-task loss：多重任务损失
多个损失之间有没有优先级呢？比如，先检查是否误分类，再讨论边框坐标的问题？
或者，用加权平均把多个loss整合起来

对于侦测（detection）任务，目标个数还是不确定的
这是一个最复杂、最有挑战性的课题
在深度网络出现（2012）以前，最高的acc只有40%
2013年使用深度网络，增到了50%；现在达到了80%以上

方法：使用滑动窗口
1、做二分类问题：在1000个物体之列吗？background（如果前1000个都不是的话）
2、如果是，遍历1000个类别：是猫吗？是狗吗？……
如何选择窗口？复杂度不能太高。
候选区域网络（region proposal），计算机视觉传统方法都对此有处理
可能根据图像边缘吧，对一张图给出2000个候选区域（又叫region of interest：ROI）

R-CNN方法
把每一个区域都放缩（wrap）到同一大小，过CNN，然后进SVM（因为是二分类嘛）
SVM是梯度下降训练的，采用hinge loss。这又是一个multi-task loss：多重任务损失
但是，2000个窗口*（卷积 + 1000个SVM），复杂度太高

Fast R-CNN
先过CNN变成feature map，然后再选出2000个ROI
然后做一种特殊的ROI池化，全连接，SOFTMAX输出（不需要1000个SVM了）
问题在于，还是需要找2000个区域

Faster R-CNN
把找ROI区域本身也列为训练内容，这个很复杂了
acc是看，找到的区域跟真正的区域之间的重叠（overlap）是不是达到某个阈值

不找proposal的方法：YOLO/SSD
也要把图片划分网格，然后做一些回归？？？

还有一个更高级的任务：划出物体，还要加以说明（captioning）
这还涉及NLP相关的东西了，end-to-end

分割（segmentation）：有一个类似faster R-CNN的方法 Mask R-CNN

姿态检测、识别关节
数据集：微软的COCO 200000张图片 80个类别